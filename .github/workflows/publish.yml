name: Publish and Monitor Base Image Updates

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"  # Trigger on version tags
  schedule:
    - cron: '0 2 * * *'  # Trigger daily at 2:00 AM
  workflow_dispatch:
  
env:
  REGISTRY_IMAGE: blacksmithop/pyodbc

jobs:
  check-and-build:
    if: github.event_name == 'schedule'  # Run only on scheduled events
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check for Base Image Update
        id: base-image-check
        uses: lucacome/docker-image-update-checker@v2.0.0
        with:
          base-image: python:3.11-slim
          image: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY_IMAGE }}:latest
          labels: "updated_from=cron"

      - name: Conditional Digest Export
        if: steps.build.outcome == 'success'
        run: |
          echo "Build was successful. Exporting digest..."
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload Digests
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: /tmp/digests/*

  publish-on-tag:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: check-and-build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY_IMAGE }}:${{ github.ref_name }}
